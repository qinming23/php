#!/bin/bash

cmd=$1
if [ $cmd"x" = "x" ];then
	echo "Usage: ph {start|stop|restart|test|status | 1|0|2|t|s}"
	exit 2
fi

# 定位真实路径
exec_bin=$0
if [ `ls -l $exec_bin | grep '\-> ' -c` == 1 ];then
	exec_bin=`ls -l $exec_bin | awk -F'-> ' '{print $2}'`
	if [ `ls -l $exec_bin | grep '\-> ' -c` == 1 ];then
		exec_bin=`ls -l $exec_bin | awk -F'-> ' '{print $2}'`
	fi
fi
SERVER_ROOT=`dirname $exec_bin`
SERVER_ROOT=`dirname $SERVER_ROOT`

# 检测php-fpm可执行文件
SERVER_BIN=php-fpm
if [ -e "/opt/app/php/sbin/php-fpm" ];then
	SERVER_BIN="/opt/app/php/sbin/php-fpm"
elif [ -e "/usr/sbin/php-fpm" ];then
	SERVER_BIN="/usr/sbin/php-fpm"
elif [ -e "/usr/local/sbin/php-fpm" ];then
	SERVER_BIN="/usr/local/sbin/php-fpm"
elif [ -e "/opt/remi/php56/root/usr/sbin/php-fpm" ];then
	SERVER_BIN="/opt/remi/php56/root/usr/sbin/php-fpm"
elif [ -e "/opt/remi/php70/root/usr/sbin/php-fpm" ];then
	SERVER_BIN="/opt/remi/php70/root/usr/sbin/php-fpm"
elif [ -e "/opt/remi/php71/root/usr/sbin/php-fpm" ];then
	SERVER_BIN="/opt/remi/php71/root/usr/sbin/php-fpm"
fi

echo -n -e "[\033[35m$SERVER_BIN\033[0m]	"
$SERVER_BIN -v 2>&1

# 检查相关的文件或目录
mkdir -p $SERVER_ROOT/logs
mv -f $SERVER_ROOT/.conf /tmp/ 2>/dev/null
mkdir -p $SERVER_ROOT/.conf

options="-c $SERVER_ROOT/.conf/php.ini -y $SERVER_ROOT/.conf/php-fpm.conf -g $SERVER_ROOT/logs/php.pid"

# 替换内容
replace()
{
	src_file=$1
	dst_file=$2
	cp -f $src_file $dst_file
	if [ -f $src_file.replace ];then
		grep -v '^\s*#' $src_file.replace | grep '=' | sed -E 's#[[:blank:]]*=[[:blank:]]*#x x x x#' | while read -r line
		do
			key2=`echo $line | awk -F'x x x x' '{print $1}'`
			key1=`echo $key2 | sed 's#\.#\\\.#g'`
			value=`echo $line | awk -F'x x x x' '{print $2}'`
			if [ "${key2%% *}" = "${value%% *}" ];then
				if [ `uname` = 'Darwin' ];then
					sed -i "" -E "s#${key1}#${value}#" $dst_file
				else
					sed -i -E "s#${key1}#${value}#" $dst_file
				fi
			else
				if [ `uname` = 'Darwin' ];then
					sed -i "" -E "s#^([[:blank:]]*)${key1}([[:blank:]]*=[[:blank:]]*).*\$#\\1${key1}\\2${value}#" $dst_file
				else
					sed -i -E "s#^([[:blank:]]*)${key1}([[:blank:]]*=[[:blank:]]*).*\$#\\1${key1}\\2${value}#" $dst_file
				fi
			fi
		done
	fi
}

# 处理主配置文件
if [ -e "$SERVER_ROOT/conf/php.ini" ];then
	replace $SERVER_ROOT/conf/php.ini $SERVER_ROOT/.conf/php.ini
else
	replace $SERVER_ROOT/conf/_php.ini $SERVER_ROOT/.conf/php.ini
fi
if [ -e "$SERVER_ROOT/conf/php-fpm.conf" ];then
	replace $SERVER_ROOT/conf/php-fpm.conf $SERVER_ROOT/.conf/php-fpm.conf
else
	replace $SERVER_ROOT/conf/_php-fpm.conf $SERVER_ROOT/.conf/php-fpm.conf
fi

# 执行脚本
if [ -e "$SERVER_ROOT/conf/start.sh" ];then
	replace $SERVER_ROOT/conf/start.sh $SERVER_ROOT/.conf/start.sh
	source $SERVER_ROOT/.conf/start.sh
fi

start()
{
	echo "Starting php-fpm ..."
	$SERVER_BIN -D $options
	echo "Started php-fpm [OK]"
	status
}

restart()
{
	echo "Restarting php-fpm ..."
	kill -USR2 `cat $SERVER_ROOT/logs/php.pid`
	echo "Restarted php-fpm [OK]"
	status
}

stop()
{
	echo "Stopping php-fpm ..."

	if [ -e "$SERVER_ROOT/logs/php.pid" ];then
		pid=`cat $SERVER_ROOT/logs/php.pid`
		kill -QUIT $pid
	fi

	xn="n"
	while [ "x"$xn != "xnnnnnnnnnn" ]
	do
	    xn=$xn"n"
		if [ -e "$SERVER_ROOT/logs/php.pid" ];then
		    if [ "x"$xn = "xnnnnnnnnnn" ];then
				kill -9 $pid
				break
		    fi
		else
			break
		fi
	
	    echo -n "."
	    sleep 1
	done

	echo "Stopped php-fpm [OK]"
	status
}

test()
{
	$SERVER_BIN $options -t
}

status()
{
	echo "[`ps ax | grep php-fpm | grep -v grep | wc -l | awk '{print $1}'` Threads]"
	ps ax | grep php-fpm | grep -v grep
}


case "$1" in
	start)
		start
		;;
	1)
		start
		;;

	reload)
		restart
		;;
	restart)
		restart
		;;
	2)
		restart
		;;

	stop)
		stop
		;;
	0)
		stop
		;;

	test)
		test
		;;
	t)
		test
		;;

	status)
		status
		;;
	s)
		status
		;;

	*)

	exit 2
esac
echo ""

